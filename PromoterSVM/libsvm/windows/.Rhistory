x <- seq(0,4,length=100)
exp <- dexp(x,1)
plot(x, exp, type="l", title="Exponential Distribution with theta of 1")
plot(x, exp, type="l", main="Exponential Distribution with theta of 1")
?points
points(1,dexp(1,rate=1),col='blue')
points(2,dexp(2,rate=1),col='blue')
points(4,dexp(4,rate=1),col='blue')
points(1, dexp(1,rate=1), col='blue', pch=10)
points(1, dexp(1,rate=1), col='blue', pch=10)
points(1, dexp(1,rate=1), col='blue', pch=3)
points(1, dexp(1,rate=1), col='blue', pch=19)
points(1, dexp(1,rate=1), col='blue', pch=19)
plot(x, exp, type="l", main="Exponential Distribution with theta of 1")
points(1, dexp(1,rate=1), col='blue', pch=19)
plot(x, exp, type="l", main="Exponential Distribution with theta of 1")
points(1, dexp(1,rate=1), col='blue', pch=3)
points(2, dexp(2,rate=1), col='blue', pch=3)
points(4, dexp(4,rate=1), col='blue', pch=3)
likelihood <- rexp(256, 1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, a_0, b_0)
plot(theta, prior, type="l")
vector(length=length(theta))
?dgamma
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(1:likelihood[n[1]]))
plot(theta, posterior, type="l")
set.seed(3)
plot(theta, prior, type="l")
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]))
line(theta, posterior, type="l")
}
set.seed(3)
likelihood <- rexp(256, 1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]))
line(theta, posterior, type="l")
}
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
line(theta, posterior, type="l")
}
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
line(theta, posterior, col=i)
}
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
line(theta, posterior)
}
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
line(theta, posterior)
}
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
lines(theta, posterior)
}
set.seed(30)
likelihood <- rexp(256, 1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
lines(theta, posterior)
}
set.seed(30)
likelihood <- rexp(256, 1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
lines(theta, posterior)
}
set.seed(30)
likelihood <- rexp(256, 1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
lines(theta, posterior)
}
set.seed(30)
dat = rexp(256,rate=1)
n = c(4,8,16,256)
theta = seq(0,4,0.01)
alpha_0=2
beta_0=0.2
for(i in 1:length(n)){
posti = vector(length=length(theta))
posti = dgamma(theta,shape=alpha_0+n[i],rate=sum(dat[1:n[i]])+beta_0)
if(i==1){plot(theta,posti,type='l',col=i,main="posterior change with n",ylim = c(0,8),ylab='posterior')}
else{lines(theta,posti,col=i)}
}
legend(3,y=7,c('n=4','n=8','n=16','n=256'),lty=c(1,1,1,1),col=c(1,2,3,4))
set.seed(30)
likelihood <- rexp(256, 1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
lines(theta, posterior, col=i)
}
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
lines(theta, posterior, col=i)
}
theta <- seq(0,4,0.01)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(1:likelihood[n[i]]))
lines(theta, posterior, col=i)
}
set.seed(3)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(1:likelihood[n[1]]))
plot(theta, posterior, type="l")
posterior <- dgamma(theta, shape=a_0+n[2], rate=b_0+sum(1:likelihood[n[2]]))
lines(theta, posterior, col=i)
theta = seq(0,4,0.01)
posti = vector(length=length(theta))
posti
set.seed(30)
dat = rexp(256,rate=1)
n = c(4,8,16,256)
theta = seq(0,4,0.01)
alpha_0=2
beta_0=0.2
for(i in 1:length(n)){
#posti = vector(length=length(theta))
posti = dgamma(theta,shape=alpha_0+n[i],rate=sum(dat[1:n[i]])+beta_0)
if(i==1){plot(theta,posti,type='l',col=i,main="posterior change with n",ylim = c(0,8),ylab='posterior')}
else{lines(theta,posti,col=i)}
}
legend(3,y=7,c('n=4','n=8','n=16','n=256'),lty=c(1,1,1,1),col=c(1,2,3,4))
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, posterior, type="l")
posterior <- dgamma(theta, shape=a_0+n[2], rate=b_0+sum(likelihood[1:n[2]]))
lines(theta, posterior, col=i)
plot(theta, prior, type="l")
set.seed(3)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l")
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
lines(theta, posterior, col=i)
}
plot(theta, prior, type="l", ylim=c(0,10))
plot(theta, prior, type="l", ylim=c(0,5))
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(30)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
prior <- dgamma(theta, shape=a_0, rate=b_0)
plot(theta, prior, type="l", ylim=c(0,5))
for (i in 1:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(8)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, prior, type="l")
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(3)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, prior, type="l", ylim=8)
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(3)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, prior, type="l", ylim=c(0,8))
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(3)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, prior, type="l", ylim=c(0,8))
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(3)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, prior, type="l", ylim=c(0,6))
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(30)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, prior, type="l", ylim=c(0,6))
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(30)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, posterior, type="l", ylim=c(0,6))
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(8)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, posterior, type="l", ylim=c(0,6))
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
set.seed(50)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, posterior, type="l", ylim=c(0,6))
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
source('~/.active-rstudio-document', echo=TRUE)
set.seed(50)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, posterior, type="l", ylim=c(0,8), col=1)
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
legend(3,y=7,c('n=4','n=8','n=16','n=256'),lty=c(1,1,1,1),col=c(1,2,3,4))
plot(theta, posterior, type="l", ylim=c(0,8), col=1, main="Updating Posterior Distribtuion for n={4,8,16,256}")
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
legend(3,y=7,c('n=4','n=8','n=16','n=256'),lty=c(1,1,1,1),col=c(1,2,3,4))
?legend
legend(3,y=7,c('n=4','n=8','n=16','n=256'),lty=c(2,1,1,1),col=c(1,2,3,4))
?legend
set.seed(50)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, posterior, type="l", ylim=c(0,8), col=1, main="Updating Posterior Distribtuion for n={4,8,16,256}")
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
legend(3, y=7, c('n=4','n=8','n=16','n=256'), lty=c(1,1,1,1), col=c(1,2,3,4))
legend(3, y=7, c("n=4","n=8","n=16","n=256"), lty=c(1,1,1,1), col=c(1,2,3,4))
x <- seq(0,4,length=100)
exp <- dexp(x, rate=1)
plot(x, exp, type="l", main="Exponential Distribution with theta of 1")
points(1, dexp(1,rate=1), col='blue', pch=3)
points(2, dexp(2,rate=1), col='blue', pch=3)
points(4, dexp(4,rate=1), col='blue', pch=3)
plot(x, exp, type="l", main="Exponential Distribution with theta of 1")
set.seed(50)
likelihood <- rexp(256, rate=1)
a_0 <- 2
b_0 <- 0.2
n <- c(4, 8, 16, 256)
theta <- seq(0,4,length=100)
posterior <- dgamma(theta, shape=a_0+n[1], rate=b_0+sum(likelihood[1:n[1]]))
plot(theta, posterior, type="l", ylim=c(0,8), col=1, main="Updating Posterior Distribtuion for n={4,8,16,256}")
for (i in 2:length(n)){
posterior <- dgamma(theta, shape=a_0+n[i], rate=b_0+sum(likelihood[1:n[i]]))
lines(theta, posterior, col=i)
}
legend(3, y=7, c("n=4","n=8","n=16","n=256"), lty=c(1,1,1,1), col=c(1,2,3,4))
install.packages("devtools")
?devtools
??devtools
devtools::install_github("klutometis/roxygen")
install.packages("Rtools")
install.packages("rtools")
library(devtools)
find_rtools()
find_rtools()
devtools::install_github("klutometis/roxygen")
library(ggplot2)
package.install("ggplot2")
install.packages("ggplot2")
library(ggplot2)
x <- 1:10
x
y <- x = 5
y <- x + 5
x
y
dat <- data.frame(x,y,group)
group <- 1:10
x <- 2*x
dat <- data.frame(x,y,group)
group
dat
y <- sapply(x, function(x) rnorm(1, x, 10))
normd <- data.frame(x,y,group)
normd
dat <- cbind(dat, normd)
x <- rep(1,10)
x
y <- 3*x
dat3 <- data.frame(x, y, group)
dat3
dat
x <- 1:10
x <- 2*x
y <- x +5
dat1 <- data.frame(x,y,group)
dat1
dat2 <- data.frame(x, sapply(x, function(x) rnom(1, x, 5)), group)
dat2 <- data.frame(x, sapply(x, function(x) rnorm(1, x, 5)), group)
dat2
y <- sapply(x, function(x) rnorm(1, x, 5))
dat2 <- data.frame(x,y,group)
dat1
dat <- rbind(dat1, dat2, dat3)
dim(dat)
ggplot()+geom_points(data=dat, aes(x=x, y=y, group=group))
library(ggplot2)
ggplot()+geom_points(data=dat, aes(x=x, y=y, group=group))
ggplot()+geom_point(data=dat, aes(x=x, y=y, group=group))
ggplot()+geom_point(data=dat, aes(x=x, y=y))
ggplot()+geom_line(data=dat, aes(x=x, y=y))
ggplot()+geom_line(data=dat, aes(x=x, y=y, group=group))
ggplot()+geom_point(data = dat, aes(x=x, y=y))
ggplot()+geom_point(data = dat1, aes(x=x, y=y))
dat1
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")
dat2
dat3
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")+
geom_point(data=dat3, aes(x=x, y=y), col = "blue")
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")+
geom_point(data=dat3, aes(x=x, y=y), col = "blue")+
geom_line(data=dat, aes(x=x, y=y, group=group))
y <- sapply(x, function(x) rnorm(1, x+5, 5))
dat2 <- data.frame(x,y,group)
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")+
geom_point(data=dat3, aes(x=x, y=y), col = "blue")+
#geom_line(data=dat, aes(x=x, y=y, group=group))
d
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")+
geom_point(data=dat3, aes(x=x, y=y), col = "blue")
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")+
geom_point(data=dat3, aes(x=x, y=y), col = "blue")+
geom_line(data=dat, aes(x=x, y=y, group=group))
dat <- rbind(dat1, dat2, dat3)
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")+
geom_point(data=dat3, aes(x=x, y=y), col = "blue")+
geom_line(data=dat, aes(x=x, y=y, group=group))
dat <- rbind(dat1, dat2)
ggplot()+geom_point(data = dat1, aes(x=x, y=y))+
geom_point(data=dat2, aes(x=x, y=y), col = "red")+
geom_point(data=dat3, aes(x=x, y=y), col = "blue")+
geom_line(data=dat, aes(x=x, y=y, group=group))
library(caret)
install.packages("pbkrtest")
library(caret)
install.packages("D:/LiYuan/pbkrtest_0.4-6.zip", repos = NULL, type = "win.binary")
library(caret)
install.packages("lme4")
install.packages("lme4")
library(caret)
?density()
?density()
setwd("D:\\LiYuan\\Data_Science\\libsvm-3.21\\windows")
dat_raw = read.csv("anova_train_fs_dat_libsvm_rdy.csv", header=FALSE)
View(dat_raw)
set.seed(123)
split = sample(nrow(dat_raw), floor(0.5*nrow(dat_raw)))
dat_train = dat_raw[split,]
dat_test = dat_raw[-split,]
write.csv(dat_train, file="train_anova_fs50.csv")
write.csv(dat_test, file="test_anova_fs50.csv")
setwd("D:\\LiYuan\\Data_Science\\libsvm-3.21\\windows")
dat_raw = read.csv("anova_train_fs_dat_libsvm_rdy.csv", header=FALSE)
View(dat_raw)
set.seed(123)
split = sample(nrow(dat_raw), floor(0.5*nrow(dat_raw)))
dat_train = dat_raw[split,]
dat_test = dat_raw[-split,]
write.csv(dat_train, file="train_anova_fs50.csv")
write.csv(dat_test, file="test_anova_fs50.csv")
write.csv(dat_test, file="test_anova_fs.csv")
setwd("D:\\LiYuan\\Data_Science\\libsvm-3.21\\windows")
dat_raw = read.csv("anova_train_fs_dat_libsvm_rdy.csv", header=FALSE)
View(dat_raw)
set.seed(123)
split = sample(nrow(dat_raw), floor(0.8*nrow(dat_raw)))
dat_train = dat_raw[split,]
dat_test = dat_raw[-split,]
write.csv(dat_train, file="train_anova_fs.csv")
write.csv(dat_test, file="test_anova_fs.csv")
write.csv(dat_train, file="train_anova_fs_raw.csv")
